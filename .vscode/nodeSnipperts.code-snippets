{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "require": {
    "scope": "javascript,typescript",
    "prefix": "req",
    "body": ["const $1 = require('$1');"],
    "description": "Add require"
  },
  "exports mongoose": {
    "scope": "javascript,typescript",
    "prefix": "expm",
    "body": ["module.exports = mongoose.model('$1', $2);"],
    "description": "Add module exports to mongoose"
  },
  "async trycatch": {
    "scope": "javascript,typescript",
    "prefix": "astc",
    "body": [
      "async ($1) => {",
      "try {",
      "$2",
      "} catch (err) {",
      "  ${3:throw err}",
      "}",
      "}"
    ],
    "description": "Add async and try/catch"
  }
}
